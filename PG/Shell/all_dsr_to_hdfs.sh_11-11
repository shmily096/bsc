#!/bin/bash
# Function:
#   将查询的结果导出至HDFS上
# History:
# 2021-11-08    Donny   v1.0    init

# 参数
target_db_name='opsdw' # 目标数据库名称
hive=/opt/module/hive3/bin/hive  # Hive的配置路径
hadoop=/opt/module/hadoop3/bin/hadoop # Hadoop的配置路径

# 默认取当前时间 
if [ -n "$2" ] ;then 
    yester_day=$2
else
    #默认取昨天的日期
    yester_day=$(date -d '-1 day' +%F)
fi
yester_year=${yester_day:0:4}
yester_month=${yester_day:0:7}-01
this_month=`date -d "${yester_day}" +%Y-%m-01`
this_year=`date -d "${yester_day}" +%Y-01-01`
sync_date=$(date  +%F)
mm=10#${yester_day:5:2}
if ((mm >= 1 ))&&((mm <= 3 ));then
    q_s_date=${yester_day:0:4}-01-01
    q_s_mon=01
    q_l_date=${yester_day:0:4}-02-01
    q_l_mon=02
    q_e_date=${yester_day:0:4}-03-31
    q_e_mon=03
elif ((mm >= 4 ))&&((mm <= 6 ));then
    q_s_date=${yester_day:0:4}-04-01
    q_s_mon=04
    q_l_date=${yester_day:0:4}-05-01
    q_l_mon=05
    q_e_date=${yester_day:0:4}-06-30
    q_e_mon=06
elif ((mm >= 7 ))&&((mm <= 9 ));then
    q_s_date=${yester_day:0:4}-07-01
    q_s_mon=07
    q_l_date=${yester_day:0:4}-08-01
    q_l_mon=08
    q_e_date=${yester_day:0:4}-09-30
    q_e_mon=09
elif ((mm >= 10 ))&&((mm <= 12 ));then
    q_s_date=${yester_day:0:4}-10-01
    q_s_mon=10
    q_l_date=${yester_day:0:4}-11-01
    q_l_mon=11
    q_e_date=${yester_day:0:4}-12-31
    q_e_mon=12
fi
echo "End loading master data on $q_s_mon:$q_e_mon:$yester_month:$yester_day .................."



# 2 设置导出的 HDFS路径
export_dir='/bsc/opsdw/export/dws_dsr_billed_daily'
export_dira='/bsc/opsdw/export/dws_dsr_cr_daily'

echo "start exporting dws_dsr_billed_daily data into HDFS on $yester_day .................."

# 1 Hive SQL string
str_sql="
use ${target_db_name};
insert OVERWRITE directory '${export_dir}'
row format delimited fields terminated by '\t' 
stored as textfile
select a.*
from opsdw.dws_dsr_billed_daily a
where dt between '$q_s_date' and '$q_e_date'
;
"
cr_sql="
use ${target_db_name};
insert OVERWRITE directory '${export_dira}'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_dsr_cr_daily
where dt>=date_add('$yester_day',-31);
"
dwd_dim_customer_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dwd_dim_customer'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dwd_dim_customer
where dt='$sync_date';
"
dwd_dim_material_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dwd_dim_material'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dwd_dim_material
where dt='$sync_date';
"
dws_dsr_dned_daily_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_dsr_dned_daily'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_dsr_dned_daily
where dt_year='$yester_year' and  dt_month between '$q_s_mon'and '$q_e_mon'
;
"
dws_dsr_fulfill_daily_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_dsr_fulfill_daily'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_dsr_fulfill_daily
WHERE dt_year >='$yester_year'and dt_month >='04'
;
"
dws_dsr_dealer_daily_transation_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_dsr_dealer_daily_transation'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_dsr_dealer_daily_transation
where dt>=date_add('$yester_day',-31);
"
#目前是全表更新后续可改为按月更新 先推4月以后的
dwt_dsr_dealer_topic_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dwt_dsr_dealer_topic'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dwt_dsr_dealer_topic
where dt_year='$yester_year' and  dt_month between cast('$q_s_mon' as int) and cast('$q_e_mon' as int)
;
"
#目前是全表更新后续可改为按月更新 先推4月以后的
dwt_dsr_topic_sql="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dwt_dsr_topic'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dwt_dsr_topic
where dt_year='$yester_year' and  dt_month between cast('$q_s_mon' as int) and cast('$q_e_mon' as int)
;
"
#推当年的数据
dws_kpi_sales_waybill_timi="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_kpi_sales_waybill_timi'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_kpi_sales_waybill_timi
--where substr(dt_yearmon,0,4)='$yester_year' and  substr(dt_yearmon,6,2) between '$q_s_mon'and '$q_e_mon'
--date_format(add_months('$this_month',-3),'yyyy-MM')
;
"
#推当年的数据
dws_kpi_monthly_isolate_stock="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_kpi_monthly_isolate_stock'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_kpi_monthly_isolate_stock
--where dt between '$q_s_date' and '$q_e_date'
;
"
#推当年的数据
dws_kpi_zc_timi="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_kpi_zc_timi'
row format delimited fields terminated by '\t' 
stored as textfile
select * 
from opsdw.dws_kpi_zc_timi
--where substr(dt_yearmon,0,4)='$yester_year' and  substr(dt_yearmon,6,2) between '$q_s_mon'and '$q_e_mon'
;
"
#推4月以后的数据
dws_kpi_stock_putaway_time="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_kpi_stock_putaway_time'
row format delimited fields terminated by '\001' 
stored as textfile
select plant, stock_location, delivery_plant,default_location,supplier, material, batch, delivery_no, 
cast(qty as int)as qty, qty_gap, start_time, end_time, 
cast(processtime_cd as int)as processtime_cd,
 cast(no_work_hr as int)as no_work_hr, 
  cast(process_wd_m as int)as process_wd_m, 
 process_category, kpicode, dt 
from opsdw.dws_kpi_stock_putaway_time
where dt>='2022-04-01'
--where dt between '$q_s_date' and '$q_e_date'
;
"
#每次全量更新取最新分区数据
dwd_dim_kpi="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dwd_dim_kpi'
row format delimited fields terminated by '\001' 
stored as textfile
select * 
from opsdw.dwd_dim_kpi
where dt=(select max(dt) from opsdw.dwd_dim_kpi)
;
"

#推4月以后的数据
dws_ie_kpi="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_ie_kpi'
row format delimited fields terminated by '\001' 
stored as textfile
select * 
from opsdw.dws_ie_kpi
--where dt between '$q_s_date' and '$q_e_date'
;
"
#推1月以后的数据
dws_kpi_cc_so_delivery="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_kpi_cc_so_delivery'
row format delimited fields terminated by '\001' 
stored as textfile
select * 
from opsdw.dws_kpi_cc_so_delivery
--where dt between '$q_s_date' and '$q_e_date'
;
"
#推昨天对应当季度的数据
dws_dsr_fulfill_monthly="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_dsr_fulfill_monthly'
row format delimited fields terminated by '\001' 
stored as textfile
select * 
from opsdw.dws_dsr_fulfill_monthly
 where dt_year='$yester_year'
 and  dt_month between cast('$q_s_mon' as int) and cast('$q_e_mon' as int)
;
"
dws_kpi_sto_migo2pgi="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_kpi_sto_migo2pgi'
row format delimited fields terminated by '\001' 
stored as textfile
SELECT plant, upn, bt, inventorystatus, sapinbounddn, workorderno, batch, inbounddn, outbounddn, supplier, id, inboundtime, outboundtime, localizationfinishtime, qty, lt_cd_hr, no_work_hr, lt_dw_hr, kpi_no,is_pacemaker, distribution_properties,  dt
FROM opsdw.dws_kpi_sto_migo2pgi;
--where dt between '$q_s_date' and '$q_e_date'
;
"
dws_iekpi_e2e="
use ${target_db_name};
insert OVERWRITE directory '/bsc/opsdw/export/dws_iekpi_e2e'
row format delimited fields terminated by '\001' 
stored as textfile
SELECT 
	outbound_yr,pickupdocument_no, commericalinvoice, inbound_invoice, emergencysigns, forwarding, arrivalgoods_type, shipfrom_country, preinspection_flag, bscinformslcdate, t1pickupdate, etd, eta, reviseetd, reviseeta, actualarrivaltime, forwordinginformslcpick, dockwarrantdate, intoinventorydate, inbounddeclaration_startdate, inbounddeclaration_finishdate, picturetaken_date, inspection_appointmentdate, inspection_finishdate, inbound_pics, inbound_mon, inbound_yr, outbound_biz_no, declaration_itemname, outbound_commericalinvoice, outbound_invoice, document_finishpreparationdate, customrelease_1, commodityinspection_date, chineselabelpicturereceiveddate, customrelease_2, testscheduled_date, actualtest_date, ciq_signcompletiondate, taxpayment_applicationdate, taxpayment_completiondate, declaration_completiondate, is_excluded, is_malaysia, abnormal_reason, status, is_valid, category_code, distribution_status, outbound_pieces, destination_wh, airport, outbound_mon, dock_invent_cd, dock_invent_holiday, dock_invent_wd, invent_cust1_cd, invent_cust1_holiday, invent_cust1_wd, cust1_chinesepicture_cd, cust1_chinesepicture_holiday, cust1_chinesepicture_wd, chinesepicture_commodity_cd, chinesepicture_commodity_holiday, chinesepicture_commodity_wd, commod_act_cust2_cd, commod_act_cust2_holiday, commod_act_cust2_wd, act_ciq_cd, act_ciq_holiday, act_ciq_wd,start_end_cd,start_end_holiday,start_end_wd
FROM opsdw.dws_iekpi_e2e
where outbound_yr>=substr('$sync_date',1,4) and outbound_commericalinvoice not like '%&'
;
"

# 2. 执行加载数据SQL
if [ "$1"x = "dws_dsr_billed_daily"x ];then
	echo "hdfs $1 only run"	
    echo "$str_sql"
	$hive -e "$str_sql"
	echo "hdfs  finish dws_dsr_billed_daily data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_iekpi_e2e"x ];then
    echo " hdfs $1 only run"
	echo "$dws_iekpi_e2e"
	$hive -e "$dws_iekpi_e2e"
	echo "hdfs  finish dws_iekpi_e2e data into hdfs layer on ${sync_date} .................."
elif [ "$1"x = "dws_kpi_cc_so_delivery"x ];then
    echo " hdfs $1 only run"
	echo "$dws_kpi_cc_so_delivery"
	$hive -e "$dws_kpi_cc_so_delivery"
	echo "hdfs  finish dws_kpi_cc_so_delivery data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_kpi_sto_migo2pgi"x ];then
    echo " hdfs $1 only run"
	echo "$dws_kpi_sto_migo2pgi"
	$hive -e "$dws_kpi_sto_migo2pgi"
	echo "hdfs  finish dws_kpi_sto_migo2pgi data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_dsr_fulfill_monthly"x ];then
    echo " hdfs $1 only run"
	echo "$dws_dsr_fulfill_monthly"
	$hive -e "$dws_dsr_fulfill_monthly"
	echo "hdfs  finish dws_dsr_fulfill_monthly data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_dsr_cr_daily"x ];then
    echo " hdfs $1 only run"
	echo "$cr_sql"
	$hive -e "$cr_sql"
	echo "hdfs  finish dws_dsr_cr_daily data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dwd_dim_customer"x ];then
    echo " hdfs $1 only run"
	echo "$dwd_dim_customer_sql"
	$hive -e "$dwd_dim_customer_sql"
	echo "hdfs  finish dwd_dim_customer data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dwd_dim_material"x ];then
    echo " hdfs $1 only run"
	echo "$dwd_dim_material_sql"
	$hive -e "$dwd_dim_material_sql"
	echo "hdfs  finish dwd_dim_material data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_dsr_dned_daily"x ];then
    echo " hdfs $1 only run"
	echo "$dws_dsr_dned_daily_sql"
	$hive -e "$dws_dsr_dned_daily_sql"
	echo "hdfs  finish dws_dsr_dned_daily_sql data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_dsr_fulfill_daily"x ];then
    echo " hdfs $1 only run"
	echo "$dws_dsr_fulfill_daily_sql"
	$hive -e "$dws_dsr_fulfill_daily_sql"
	echo "hdfs  finish dws_dsr_fulfill_daily data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_dsr_dealer_daily_transation"x ];then
    echo " hdfs $1 only run"
	echo "$dws_dsr_dealer_daily_transation_sql"
	$hive -e "$dws_dsr_dealer_daily_transation_sql"
	echo "hdfs  finish dws_dsr_dealer_daily_transation_sql data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dwt_dsr_dealer_topic"x ];then
    echo " hdfs $1 only run"
	echo "$dwt_dsr_dealer_topic_sql"
	$hive -e "$dwt_dsr_dealer_topic_sql"
	echo "hdfs  finish dwt_dsr_dealer_topic_sql data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dwt_dsr_topic"x ];then
    echo " hdfs $1 only run"
	echo "$dwt_dsr_topic_sql"
	$hive -e "$dwt_dsr_topic_sql"
	echo "hdfs  finish dwt_dsr_topic_sql data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_kpi_sales_waybill_timi"x ];then
    echo " hdfs $1 only run"
	echo "$dws_kpi_sales_waybill_timi"
	$hive -e "$dws_kpi_sales_waybill_timi"
	echo "hdfs  finish dws_kpi_sales_waybill_timi data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_kpi_monthly_isolate_stock"x ];then
    echo " hdfs $1 only run"
	echo "$dws_kpi_monthly_isolate_stock"
	$hive -e "$dws_kpi_monthly_isolate_stock"
	echo "hdfs  finish dws_kpi_monthly_isolate_stock data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_kpi_zc_timi"x ];then
    echo " hdfs $1 only run"
	echo "$dws_kpi_zc_timi"
	$hive -e "$dws_kpi_zc_timi"
	echo "hdfs  finish dws_kpi_zc_timi data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_kpi_stock_putaway_time"x ];then
    echo " hdfs $1 only run"
	echo "$dws_kpi_stock_putaway_time"
	$hive -e "$dws_kpi_stock_putaway_time"
	echo "hdfs  finish dws_kpi_stock_putaway_time data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dwd_dim_kpi"x ];then
    echo " hdfs $1 only run"
	echo "$dwd_dim_kpi"
	$hive -e "$dwd_dim_kpi"
	echo "hdfs  finish dwd_dim_kpi data into hdfs layer on ${yester_day} .................."
elif [ "$1"x = "dws_ie_kpi"x ];then
    echo " hdfs $1 only run"
	echo "$dws_ie_kpi"
	$hive -e "$dws_ie_kpi"
	echo "hdfs  finish dws_ie_kpi data into hdfs layer on ${yester_day} .................."

else
    echo "hdfs  all run"
    echo "$str_sql"
    $hive -e "$str_sql"
	echo "dws_dsr_billed_daily finish"
    echo "$cr_sql"
	$hive -e "$cr_sql"
    echo "dws_dsr_cr_daily finish"
    echo "$dwd_dim_customer_sql"
	$hive -e "$dwd_dim_customer_sql"
    echo "dwd_dim_customer finish"
    echo "$dwd_dim_material_sql"
	$hive -e "$dwd_dim_material_sql"
    echo "dwd_dim_material_sql finish"
    echo "$dws_dsr_dned_daily_sql"
	$hive -e "$dws_dsr_dned_daily_sql"
    echo "dws_dsr_dned_daily_sql finish"
    echo "$dws_dsr_fulfill_daily_sql"
	$hive -e "$dws_dsr_fulfill_daily_sql"
    echo "dws_dsr_fulfill_daily_sql finish"
    echo "$dws_dsr_dealer_daily_transation_sql"
	$hive -e "$dws_dsr_dealer_daily_transation_sql"
    echo "--------------dws_dsr_dealer_daily_transation_sql finish"
    echo "$dwt_dsr_dealer_topic_sql"
	$hive -e "$dwt_dsr_dealer_topic_sql"
    echo "--------------dwt_dsr_dealer_topic_sql finish"	
 	echo "$dwt_dsr_topic_sql"
	$hive -e "$dwt_dsr_topic_sql"
    echo "--------------dwt_dsr_topic_sql finish"		
	echo "$dws_kpi_sales_waybill_timi"
	$hive -e "$dws_kpi_sales_waybill_timi"
	echo "--------------dws_kpi_sales_waybill_timi finish"	
	echo "$dws_kpi_monthly_isolate_stock"
	$hive -e "$dws_kpi_monthly_isolate_stock"
	echo "--------------dws_kpi_monthly_isolate_stock finish"	
	echo "$dws_kpi_zc_timi"
	$hive -e "$dws_kpi_zc_timi"
	echo "--------------dws_kpi_zc_timi finish"	
	echo "$dws_kpi_stock_putaway_time"
	$hive -e "$dws_kpi_stock_putaway_time"
	echo "--------------dws_kpi_stock_putaway_time finish"	
	echo "$dwd_dim_kpi"
	$hive -e "$dwd_dim_kpi"
	echo "--------------dwd_dim_kpi finish"	
	echo "$dws_kpi_cc_so_delivery"
	$hive -e "$dws_kpi_cc_so_delivery"
	echo "--------------dws_kpi_cc_so_delivery finish"	
	echo "$dws_dsr_fulfill_monthly"
	$hive -e "$dws_dsr_fulfill_monthly"
	echo "--------------dws_dsr_fulfill_monthly finish"	
	echo "$dws_iekpi_e2e"
	$hive -e "$dws_iekpi_e2e"
	echo "--------------dws_iekpi_e2e finish"	
fi
exitCode=$?
if [ "$exitCode" -ne 0 ];then  #ne不等于
    echo "[Error] hive execute failed!"
    exit $exitCode
fi

echo "End exporting ads_forwarder_app data into HDFS on $yester_day .................."